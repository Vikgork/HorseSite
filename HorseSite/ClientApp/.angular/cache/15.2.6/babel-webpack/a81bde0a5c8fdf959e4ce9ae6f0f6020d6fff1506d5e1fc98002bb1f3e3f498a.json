{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class HorseService {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n    this.url = \"horse\";\n  }\n  getHorsesShort(request) {\n    console.log(this.baseUrl + this.url);\n    return this.http.post(`${this.baseUrl}${this.url}/filter`, request);\n  }\n}\nHorseService.ɵfac = function HorseService_Factory(t) {\n  return new (t || HorseService)(i0.ɵɵinject(HttpClient), i0.ɵɵinject('BASE_URL'));\n};\nHorseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HorseService,\n  factory: HorseService.ɵfac\n});","map":{"version":3,"mappings":"AAEA,SAASA,UAAU,QAAoB,sBAAsB;;;AAK7D,OAAM,MAAOC,YAAY;EACvBC,YAC8BC,IAAgB,EAChBC,OAAe;IADf,KAAAD,IAAI,GAAJA,IAAI;IACJ,KAAAC,OAAO,GAAPA,OAAO;IAI7B,KAAAC,GAAG,GAAG,OAAO;EAFrB;EAIOC,cAAcA,CAACC,OAAkC;IACtDC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,OAAO,GAAC,IAAI,CAACC,GAAG,CAAC;IAClC,OAAO,IAAI,CAACF,IAAI,CAACO,IAAI,CAA2B,GAAG,IAAI,CAACN,OAAO,GAAG,IAAI,CAACC,GAAG,SAAS,EAACE,OAAO,CAAC;EAC9F;;;mBAZWN,YAAY,EAAAU,EAAA,CAAAC,QAAA,CAEbZ,UAAU,GAAAW,EAAA,CAAAC,QAAA,CACV,UAAU;AAAA;;SAHTX,YAAY;EAAAY,OAAA,EAAZZ,YAAY,CAAAa;AAAA","names":["HttpClient","HorseService","constructor","http","baseUrl","url","getHorsesShort","request","console","log","post","i0","ɵɵinject","factory","ɵfac"],"sourceRoot":"","sources":["D:\\HorseSite\\HorseSite\\HorseSite\\ClientApp\\src\\services\\horseservice.service.ts"],"sourcesContent":["import { Inject,Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Horseshort, ItemsRequest } from 'src/models';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class HorseService{\n  public constructor(\n    @Inject(HttpClient) private http: HttpClient,\n    @Inject('BASE_URL') private baseUrl: string\n  ){\n  }\n  \n  private url = \"horse\"\n  \n  public getHorsesShort(request?: ItemsRequest<Horseshort>): Observable<ItemsRequest<Horseshort>>{\n    console.log(this.baseUrl+this.url);\n    return this.http.post<ItemsRequest<Horseshort>>(`${this.baseUrl}${this.url}/filter`,request);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}